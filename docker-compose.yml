version: '3.9'

services:
  neuropulse:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: neuropulse-core
    restart: unless-stopped
    ports:
      - '3000:3000'
      - '8080:8080'
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:password@postgres:5432/neuropulse
      REDIS_URL: redis://redis:6379
      MONGO_URI: mongodb://mongo:27017/neuropulse
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./models:/app/models
    networks:
      - neuropulse-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongo:
        condition: service_started

  postgres:
    image: postgres:16-alpine
    container_name: neuropulse-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: neuropulse
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - neuropulse-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: neuropulse-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    ports:
      - '6379:6379'
    networks:
      - neuropulse-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:7
    container_name: neuropulse-mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: neuropulse
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo-data:/data/db
    ports:
      - '27017:27017'
    networks:
      - neuropulse-network

  nginx:
    image: nginx:alpine
    container_name: neuropulse-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - neuropulse-network
    depends_on:
      - neuropulse

  prometheus:
    image: prom/prometheus:latest
    container_name: neuropulse-prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - '9090:9090'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - neuropulse-network

  grafana:
    image: grafana/grafana:latest
    container_name: neuropulse-grafana
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - '3001:3000'
    networks:
      - neuropulse-network
    depends_on:
      - prometheus

volumes:
  postgres-data:
  redis-data:
  mongo-data:
  prometheus-data:
  grafana-data:

networks:
  neuropulse-network:
    driver: bridge
